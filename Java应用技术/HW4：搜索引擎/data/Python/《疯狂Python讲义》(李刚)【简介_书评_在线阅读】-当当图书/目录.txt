目 录 第1章　Python语言概述和开发环境 1 1.1　Python简介 2 1.1.1　Python简史 2 1.1.2　Python的特点 3 1.2　Python程序运行机制 3 1.3　开发Python的准备 4 1.3.1　在Windows上安装Python 4 1.3.2　在Linux上安装Python 6 1.3.3　在Mac OS X上安装Python 7 1.4　第一个Python程序 7 1.4.1　编辑Python源程序 7 1.4.2　使用IDLE运行Python程序 8 
目 录
第1章　Python语言概述和开发环境 1
1.1　Python简介 2
1.1.1　Python简史 2
1.1.2　Python的特点 3
1.2　Python程序运行机制 3
1.3　开发Python的准备 4
1.3.1　在Windows上安装Python 4
1.3.2　在Linux上安装Python 6
1.3.3　在Mac OS X上安装Python 7
1.4　第一个Python程序 7
1.4.1　编辑Python源程序 7
1.4.2　使用IDLE运行Python程序 8
1.4.3　使用命令行工具运行Python程序 8
1.5　交互式解释器 10
1.6　本章小结 11
本章练习 11
第2章　变量和简单类型 12
2.1　单行注释和多行注释 13
2.2　变量 14
2.2.1　Python是弱类型语言 14
2.2.2　使用print函数输出变量 15
2.2.3　变量的命名规则 16
2.2.4　Python的关键字和内置函数 17
2.3　数值类型 18
2.3.1　整型 18
2.3.2　浮点型 20
2.3.3　复数 20
2.4　字符串入门 21
2.4.1　字符串和转义字符 21
2.4.2　拼接字符串 22
2.4.3　repr和字符串 22
2.4.4　使用input和raw_input获取用户输入 23
2.4.5　长字符串 24
2.4.6　原始字符串 24
2.4.7　字节串（bytes） 25
2.5　深入使用字符串 27
2.5.1　转义字符 27
2.5.2　字符串格式化 27
2.5.3　序列相关方法 29
2.5.4　大小写相关方法 30
2.5.5　删除空白 32
2.5.6　查找、替换相关方法 32
2.5.7　分割、连接方法 34
2.6　运算符 34
2.6.1　赋值运算符 34
2.6.2　算术运算符 35
2.6.3　位运算符 37
2.6.4　扩展后的赋值运算符 40
2.6.5　索引运算符 40
2.6.6　比较运算符与bool类型 40
2.6.7　逻辑运算符 41
2.6.8　三目运算符 42
2.6.9　in运算符 44
2.6.10　运算符的结合性和优先级 44
2.7　本章小结 45
本章练习 45
第3章　列表、元组和字典 46
3.1　序列简介 47
3.1.1　Python的序列 47
3.1.2　创建列表和元组 47
3.2　列表和元组的通用用法 48
3.2.1　通过索引使用元素 48
3.2.2　子序列 48
3.2.3　加法 49
3.2.4　乘法 49
3.2.5　in运算符 50
3.2.6　长度、最大值和最小值 50
3.2.7　序列封包和序列解包 51
3.3　使用列表 52
3.3.1　创建列表 52
3.3.2　增加列表元素 53
3.3.3　删除列表元素 54
3.3.4　修改列表元素 55
3.3.5　列表的其他常用方法 56
3.4　使用字典 58
3.4.1　字典入门 58
3.4.2　创建字典 58
3.4.3　字典的基本用法 59
3.4.4　字典的常用方法 60
3.4.5　使用字典格式化字符串 63
3.5　本章小结 63
本章练习 64
第4章　流程控制 65
4.1　顺序结构 66
4.2　if分支结构 66
4.2.1　不要忘记缩进 67
4.2.2　不要随意缩进 69
4.2.3　不要遗忘冒号 70
4.2.4　if条件的类型 70
4.2.5　if分支的逻辑错误 71
4.2.6　if表达式 72
4.2.7　pass语句 72
4.3　断言 73
4.4　循环结构 73
4.4.1　while循环 73
4.4.2　使用while循环遍历列表和元组 74
4.4.3　for-in循环 75
4.4.4　使用for-in循环遍历列表和元组 76
4.4.5　使用for-in循环遍历字典 77
4.4.6　循环使用else 78
4.4.7　嵌套循环 79
4.4.8　for表达式 80
4.4.9　常用工具函数 82
4.5　控制循环结构 83
4.5.1　使用break结束循环 83
4.5.2　使用continue忽略本次循环的剩下语句 85
4.5.3　使用return结束方法 85
4.6　牛刀小试 86
4.6.1　数字转人民币读法 86
4.6.2　绕圈圈 87
4.6.3　控制台五子棋 89
4.6.4　控制台超市系统 90
4.7　本章小结 94
本章练习 94
第5章　函数和lambda表达式 97
5.1　函数入门 98
5.1.1　理解函数 98
5.1.2　定义函数和调用函数 99
5.1.3　为函数提供文档 100
5.1.4　多个返回值 100
5.1.5　递归函数 101
5.2　函数的参数 102
5.2.1　关键字（keyword）参数 102
5.2.2　参数默认值 103
5.2.3　参数收集（个数可变的参数） 105
5.2.4　逆向参数收集 106
5.2.5　函数的参数传递机制 107
5.2.6　变量作用域 111
5.3　局部函数 113
5.4　函数的高级内容 114
5.4.1　使用函数变量 115
5.4.2　使用函数作为函数形参 115
5.4.3　使用函数作为返回值 116
5.5　局部函数与lambda表达式 117
5.5.1　回顾局部函数 117
5.5.2　使用lambda表达式代替局部函数 118
5.6　本章小结 119
本章练习 119
第6章　类和对象 120
6.1　类和对象 121
6.1.1　定义类 121
6.1.2　对象的产生和使用 122
6.1.3　对象的产生和使用 123
6.1.4　实例方法和自动绑定self 124
6.2　方法 126
6.2.1　类也能调用实例方法 126
6.2.2　类方法与静态方法 128
6.2.3　@函数装饰器 128
6.2.4　再论类命名空间 131
6.3　成员变量 131
6.3.1　类变量和实例变量 131
6.3.2　使用property函数定义属性 134
6.4　隐藏和封装 137
6.5　类的继承 139
6.5.1　继承的语法 139
6.5.2　关于多继承 140
6.5.3　重写父类的方法 140
6.5.4　使用未绑定方法调用被重写的方法 141
6.5.5　使用super函数调用父类的构造方法 142
6.6　Python的动态性 143
6.6.1　动态属性与__slots__ 144
6.6.2　使用type()函数定义类 145
6.6.3　使用metaclass 146
6.7　多态 147
6.7.1　多态性 147
6.7.2　检查类型 149
6.8　枚举类 150
6.8.1　枚举入门 150
6.8.2　枚举的构造器 152
6.9　本章小结 153
本章练习 153
第7章　异常处理 154
7.1　异常概述 155
7.2　异常处理机制 156
7.2.1　使用try...except捕获异常 156
7.2.2　异常类的继承体系 157
7.2.3　多异常捕获 159
7.2.4　访问异常信息 160
7.2.5　else块 161
7.2.6　使用finally回收资源 163
7.2.7　异常处理嵌套 165
7.3　使用raise引发异常 165
7.3.1　引发异常 165
7.3.2　自定义异常类 166
7.3.3　except和raise同时使用 167
7.3.4　raise不需要参数 168
7.4　Python的异常传播轨迹 168
7.5　异常处理规则 170
7.5.1　不要过度使用异常 171
7.5.2　不要使用过于庞大的try块 172
7.5.3　不要忽略捕获到的异常 172
7.6　本章小结 172
本章练习 173
第8章　Python类的特殊方法 174
8.1　常见的特殊方法 175
8.1.1　重写__repr__方法 175
8.1.2　析构方法：__del__ 176
8.1.3　__dir__方法 177
8.1.4　__dict__属性 178
8.1.5　__getattr__、__setattr__等 178
8.2　与反射相关的属性和方法 180
8.2.1　动态操作属性 180
8.2.2　__call__属性 182
8.3　与序列相关的特殊方法 183
8.3.1　序列相关方法 183
8.3.2　实现迭代器 185
8.3.3　扩展列表、元组和字典 186
8.4　生成器 186
8.4.1　创建生成器 187
8.4.2　生成器的方法 189
8.5　运算符重载的特殊方法 191
8.5.1　与数值运算符相关的特殊方法 191
8.5.2　与比较运算符相关的特殊方法 194
8.5.3　与单目运算符相关的特殊方法 195
8.5.4　与类型转换相关的特殊方法 196
8.5.5　与常见的内建函数相关的特殊方法 197
8.6　本章小结 198
本章练习 198
第9章　模块和包 199
9.1　模块化编程 200
9.1.1　导入模块的语法 200
9.1.2　定义模块 203
9.1.3　为模块编写说明文档 203
9.1.4　为模块编写测试代码 204
9.2　加载模块 205
9.2.1　使用环境变量 205
9.2.2　默认的模块加载路径 208
9.2.3　导入模块的本质 209
9.2.4　模块的__all__变量 211
9.3　使用包 212
9.3.1　什么是包 212
9.3.2　定义包 212
9.3.3　导入包内成员 214
9.4　查看模块内容 216
9.4.1　模块包含什么 216
9.4.2　使用__doc__属性查看文档 217
9.4.3　使用__file__属性查看模块的源文件路径 218
9.5　本章小结 218
本章练习 218
第10章　常见模块 219
10.1　sys 220
10.1.1　获取运行参数 222
10.1.2　动态修改模块加载路径 223
10.2　os模块 223
10.3　random 225
10.4　time 227
10.5　JSON支持 230
10.5.1　JSON的基本知识 230
10.5.2　Python的JSON支持 232
10.6　正则表达式 236
10.6.1　Python的正则表达式支持 236
10.6.2　正则表达式旗标 241
10.6.3　创建正则表达式 242
10.6.4　子表达式 244
10.6.5　贪婪模式与勉强模式 246
10.7　容器相关类 247
10.7.1　set和frozenset 248
10.7.2　双端队列（deque） 250
10.7.3　Python的堆操作 253
10.8　collections下的容器支持 255
10.8.1　ChainMap对象 255
10.8.2　Counter对象 257
10.8.3　defaultdict对象 260
10.8.4　namedtuple工厂函数 261
10.8.5　OrderedDict对象 262
10.9　函数相关模块 264
10.9.1　itertools模块的功能函数 264
10.9.2　functools模块的功能函数 267
10.10　本章小结 273
本章练习 273
第11章　图形界面编程 275
11.1　Python的GUI库 276
11.2　Tkinter GUI编程的组件 277
11.3　布局管理器 283
11.3.1　Pack布局管理器 283
11.3.2　Grid布局管理器 285
11.3.3　Place布局管理器 287
11.4　事件处理 288
11.4.1　简单的事件处理 289
11.4.2　事件绑定 289
11.5　Tkinter常用组件 293
11.5.1　使用ttk组件 293
11.5.2　Variable类 294
11.5.3　使用compound选项 295
11.5.4　Entry和Text组件 297
11.5.5　Radiobutton和Checkbutton组件 300
11.5.6　Listbox和Combobox组件 303
11.5.7　Spinbox组件 308
11.5.8　Scale和Label
 显示全部信息