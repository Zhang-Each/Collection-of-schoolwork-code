《Python编程 从入门到实践》目录 第 一部分　基础知识 第 1章　起步 2 1.1　搭建编程环境 2 1.1.1　Python 2和Python 3 2 
《Python编程 从入门到实践》目录

第 一部分　基础知识

第 1章　起步 2

1.1　搭建编程环境 2

1.1.1　Python 2和Python 3 2

1.1.2　运行Python代码片段 3

1.1.3　Hello World程序 3

1.2　在不同操作系统中搭建Python编程环境 3

1.2.1　在Linux系统中搭建Python编程环境 3

1.2.2　在OS X系统中搭建Python编程环境 6

1.2.3　在Windows系统中搭建Python编程环境 8

1.3　解决安装问题 12

1.4　从终端运行Python程序 13

1.4.1　在Linux和OS X系统中从终端运行Python程序 13

1.4.2　在Windows系统中从终端运行Python程序 13

1.5　小结 14

第 2章　变量和简单数据类型 15

2.1　运行hello_world.py时发生的情况 15

2.2　变量 16

2.2.1　变量的命名和使用 16

2.2.2　使用变量时避免命名错误 17

2.3　字符串 18

2.3.1　使用方法修改字符串的大小写 19

2.3.2　合并（拼接）字符串 19

2.3.3　使用制表符或换行符来添加空白 20

2.3.4　删除空白 21

2.3.5　使用字符串时避免语法错误 22

2.3.6　Python 2中的print语句 23

2.4　数字 24

2.4.1　整数 24

2.4.2　浮点数 25

2.4.3　使用函数str()避免类型错误 25

2.4.4　Python 2中的整数 26

2.5　注释 27

2.5.1　如何编写注释 27

2.5.2　该编写什么样的注释 28

2.6　Python之禅 28

2.7　小结 30

第3章　列表简介 31

3.1　列表是什么 31

3.1.1　访问列表元素 32

3.1.2　索引从0而不是1开始 32

3.1.3　使用列表中的各个值 33

3.2　修改、添加和删除元素 33

3.2.1　修改列表元素 34

3.2.2　在列表中添加元素 34

3.2.3　从列表中删除元素 35

3.3　组织列表 39

3.3.1　使用方法sort()对列表进行永久性排序 39

3.3.2　使用函数sorted()对列表进行临时排序 40

3.3.3　倒着打印列表 41

3.3.4　确定列表的长度 41

3.4　使用列表时避免索引错误 42

3.5　小结 43

第4章　操作列表 44

4.1　遍历整个列表 44

4.1.1　深入地研究循环 45

4.1.2　在for循环中执行更多的操作 46

4.1.3　在for循环结束后执行一些操作 47

4.2　避免缩进错误 47

4.2.1　忘记缩进 48

4.2.2　忘记缩进额外的代码行 48

4.2.3　不必要的缩进 49

4.2.4　循环后不必要的缩进 49

4.2.5　遗漏了冒号 50

4.3　创建数值列表 51

4.3.1　使用函数range() 51

4.3.2　使用range()创建数字列表 51

4.3.3　对数字列表执行简单的统计计算 53

4.3.4　列表解析 53

4.4　使用列表的一部分 54

4.4.1　切片 54

4.4.2　遍历切片 56

4.4.3　复制列表 56

4.5　元组 59

4.5.1　定义元组 59

4.5.2　遍历元组中的所有值 59

4.5.3　修改元组变量 60

4.6　设置代码格式 61

4.6.1　格式设置指南 61

4.6.2　缩进 61

4.6.3　行长 61

4.6.4　空行 62

4.6.5　其他格式设置指南 62

4.7　小结 63

第5章　if语句 64

5.1　一个简单示例 64

5.2　条件测试 65

5.2.1　检查是否相等 65

5.2.2　检查是否相等时不考虑大小写 65

5.2.3　检查是否不相等 66

5.2.4　比较数字 67

5.2.5　检查多个条件 67

5.2.6　检查特定值是否包含在列表中 68

5.2.7　检查特定值是否不包含在列表中 69

5.2.8　布尔表达式 69

5.3　if语句 70

5.3.1　简单的if语句 70

5.3.2　if-else语句 71

5.3.3　if-elif-else结构 72

5.3.4　使用多个elif代码块 73

5.3.5　省略else代码块 74

5.3.6　测试多个条件 74

5.4　使用if语句处理列表 76

5.4.1　检查特殊元素 77

5.4.2　确定列表不是空的 78

5.4.3　使用多个列表 78

5.5　设置if语句的格式 80

5.6　小结 80

第6章　字典 81

6.1　一个简单的字典 81

6.2　使用字典 82

6.2.1　访问字典中的值 82

6.2.2　添加键—值对 83

6.2.3　先创建一个空字典 83

6.2.4　修改字典中的值 84

6.2.5　删除键—值对 85

6.2.6　由类似对象组成的字典 86

6.3　遍历字典 87

6.3.1　遍历所有的键—值对 87

6.3.2　遍历字典中的所有键 89

6.3.3　按顺序遍历字典中的所有键 91

6.3.4　遍历字典中的所有值 91

6.4　嵌套 93

6.4.1　字典列表 93

6.4.2　在字典中存储列表 95

6.4.3　在字典中存储字典 97

6.5　小结 99

第7章　用户输入和while循环 100

7.1　函数input()的工作原理 100

7.1.1　编写清晰的程序 101

7.1.2　使用int()来获取数值输入 102

7.1.3　求模运算符 103

7.1.4　在Python 2.7中获取输入 104

7.2　while循环简介 104

7.2.1　使用while循环 104

7.2.2　让用户选择何时退出 105

7.2.3　使用标志 106

7.2.4　使用break退出循环 107

7.2.5　在循环中使用continue 108

7.2.6　避免无限循环 109

7.3　使用while循环来处理列表和字典 110

7.3.1　在列表之间移动元素 110

7.3.2　删除包含特定值的所有列表元素 111

7.3.3　使用用户输入来填充字典 112

7.4　小结 113

第8章　函数 114

8.1　定义函数 114

8.1.1　向函数传递信息 115

8.1.2　实参和形参 115

8.2　传递实参 116

8.2.1　位置实参 116

8.2.2　关键字实参 118

8.2.3　默认值 118

8.2.4　等效的函数调用 119

8.2.5　避免实参错误 120

8.3　返回值 121

8.3.1　返回简单值 121

8.3.2　让实参变成可选的 122

8.3.3　返回字典 123

8.3.4　结合使用函数和while循环 124

8.4　传递列表 126

8.4.1　在函数中修改列表 126

8.4.2　禁止函数修改列表 129

8.5　传递任意数量的实参 130

8.5.1　结合使用位置实参和任意数量实参 131

8.5.2　使用任意数量的关键字实参 131

8.6　将函数存储在模块中 133

8.6.1　导入整个模块 133

8.6.2　导入特定的函数 134

8.6.3　使用as给函数指定别名 134

8.6.4　使用as给模块指定别名 135

8.6.5　导入模块中的所有函数 135

8.7　函数编写指南 136

8.8　小结 137

第9章　类 138

9.1　创建和使用类 138

9.1.1　创建Dog类 139

9.1.2　根据类创建实例 140

9.2　使用类和实例 142

9.2.1　Car类 143

9.2.2　给属性指定默认值 143

9.2.3　修改属性的值 144

9.3　继承 147

9.3.1　子类的方法__init__() 147

9.3.2　Python 2.7中的继承 149

9.3.3　给子类定义属性和方法 149

9.3.4　重写父类的方法 150

9.3.5　将实例用作属性 150

9.3.6　模拟实物 152

9.4　导入类 153

9.4.1　导入单个类 153

9.4.2　在一个模块中存储多个类 155

9.4.3　从一个模块中导入多个类 156

9.4.4　导入整个模块 157

9.4.5　导入模块中的所有类 157

9.4.6　在一个模块中导入另一个模块 157

9.4.7　自定义工作流程 158

9.5　Python标准库 159

9.6　类编码风格 161

9.7　小结 161

第 10章　文件和异常 162

10.1　从文件中读取数据 162

10.1.1　读取整个文件 162

10.1.2　文件路径 164

10.1.3　逐行读取 165

10.1.4　创建一个包含文件各行内容的列表 166

10.1.5　使用文件的内容 166

10.1.6　包含一百万位的大型文件 168

10.1.7　圆周率值中包含你的生日吗 168

10.2　写入文件 169

10.2.1　写入空文件 170

10.2.2　写入多行 170

10.2.3　附加到文件 171

10.3　异常 172

10.3.1　处理ZeroDivisionError异常 172

10.3.2　使用try-except代码块 173

10.3.3　使用异常避免崩溃 173

10.3.4　else代码块 174

10.3.5　处理FileNotFoundError异常 175

10.3.6　分析文本 176

10.3.7　使用多个文件 177

10.3.8　失败时一声不吭 178

10.3.9　决定报告哪些错误 179

10.4　存储数据 180

10.4.1　使用json.dump()和json.load() 180

10.4.2　保存和读取用户生成的数据 181

10.4.3　重构 183

10.5　小结 186

第 11章　测试代码 187

11.1　测试函数 187

11.1.1　单元测试和测试用例 188

11.1.2　可通过的测试 188

11.1.3　不能通过的测试 190

11.1.4　测试未通过时怎么办 191

11.1.5　添加新测试 191

11.2　测试类 193

11.2.1　各种断言方法 193

11.2.2　一个要测试的类 194

11.2.3　测试AnonymousSurvey类 195

11.2.4　方法setUp() 197

11.3　小结 199

第 二部分　项　　目

项目1　外星人入侵 202

第 12章　武装飞船 203

12.1　规划项目 203

12.2　安装Pygame 204

12.2.1　使用pip安装Python包 204

12.2.2　在Linux系统中安装Pygame 206

12.2.3　在OS X系统中安装Pygame 207

12.2.4　在Windows系统中安装Pygame 207

12.3　开始游戏项目 207

12.3.1　创建Pygame窗口以及响应用户输入 208

12.3.2　设置背景色 209

 
 显示全部信息