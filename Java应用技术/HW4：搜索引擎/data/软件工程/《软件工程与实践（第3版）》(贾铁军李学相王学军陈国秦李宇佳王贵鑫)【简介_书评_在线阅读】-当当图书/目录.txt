第 5 章 面向对象开发方法 面向对象的方法和应用非常广泛，已经扩展到数据库系统、应用平台、分布式系统、网络管理结构、交互式界面、应用结构、CAD技术、人工智能等领域的研发、管理与维护，具有广泛的应用。面向对象方法注重在软件研发过程中面向客观现实世界或问题域中的事物，采用人类在认识客观世界的过程中习惯的思维方式，更加直观、自然地描述客观世界教学课件 第5章面向对象开发方法中的有关事物，成为一种快速高效的软件开发方法。 教学目标  掌握面向对象及其方法的有关概念和特点。  理解面向对象软件的主要开发任务及过程。  熟悉面向对象分析和面向对象设计的方法。  掌握面向对象分析和设计的实际应用方法。 5.1面向对象的相关概念 【案例51】面向对象方法是主流软件开发方法。 （1） 从世界观的角度认为：世界是由各种具有各自运动规律和内部状态的对象组成，不同对象之间的相互作用和通信构成了完整的现实世界。人类应当按照现实世界本来面貌理解世界，直接通过对象及其相互关系反映世界，以此构建的系统才知识拓展 面向对象方法论的产生 能符合现实世界。 （2） 从方法学的角度认为：面向对象方法是面向对象的世界观在开发方法中的直接运用，强调系统的结构应该直接与现实世界的结构相对应，应该围绕现实世界中的对象构造系统，而不应围绕功能构造系统。 ＼软＼件＼工＼程＼与＼实＼践＼（第3版）＼第5章 / 面向对象开发方法/ 5.1.1对象与类的相关概念 第 5 章
面向对象开发方法
面向对象的方法和应用非常广泛，已经扩展到数据库系统、应用平台、分布式系统、网络管理结构、交互式界面、应用结构、CAD技术、人工智能等领域的研发、管理与维护，具有广泛的应用。面向对象方法注重在软件研发过程中面向客观现实世界或问题域中的事物，采用人类在认识客观世界的过程中习惯的思维方式，更加直观、自然地描述客观世界教学课件
第5章面向对象开发方法中的有关事物，成为一种快速高效的软件开发方法。
 教学目标
 掌握面向对象及其方法的有关概念和特点。
 理解面向对象软件的主要开发任务及过程。
 熟悉面向对象分析和面向对象设计的方法。
 掌握面向对象分析和设计的实际应用方法。
5.1面向对象的相关概念
【案例51】面向对象方法是主流软件开发方法。
（1） 从世界观的角度认为：世界是由各种具有各自运动规律和内部状态的对象组成，不同对象之间的相互作用和通信构成了完整的现实世界。人类应当按照现实世界本来面貌理解世界，直接通过对象及其相互关系反映世界，以此构建的系统才知识拓展
面向对象方法论的产生 能符合现实世界。
（2） 从方法学的角度认为：面向对象方法是面向对象的世界观在开发方法中的直接运用，强调系统的结构应该直接与现实世界的结构相对应，应该围绕现实世界中的对象构造系统，而不应围绕功能构造系统。
＼软＼件＼工＼程＼与＼实＼践＼（第3版）＼第5章 / 面向对象开发方法/ 5.1.1对象与类的相关概念
掌握面向对象的开发方法，需要理解相关概念。
1. 对象及其三要素
对象（Object）是系统中的基本运行的实体（如函数、控件），是代码和数据的集合，即现实世界中的具体事物，是构成软件系统的基本单位，面向对象系统是数据抽象与过程抽象的综合。面向对象方法以对象分解代替传统方法的功能分解。面向对象的系统由对象组成，复杂的对象由简单的对象组合而成。对象具有三要素： 对象标识、属性和服务。其中，对象标识即对象的名称，用于唯一地识别系统内部对象，在定义或使用对象时指定。属性（Attribute）也称为状态（State）或数据，用于描述对象的静态特征。在某些面向对象知识拓展
面向对象的三大特征 程序设计（Object Oriented Programming，OOP）语言中，属性通常被称为成员变量（Member Variable）或简称变量（Variable）。服务（Service）也称为操作（Operation）、行为（Behavior）或方法（Method）等用于描述对象的动态特征，在某些OOP语言中，服务通常被称为成员函数或简称函数。
2. 封装的概念及含义
封装（Encapsulation）是指将软件内部具体实现进行隐藏，将数据与操作数据的源代码进行有机结合，形成“类”，类的成员包括数据和函数。封装通过抽象得到的数据和行为（或功能）结合，形成一个有机的整体。封装是对象的一个重要特性，在面向对象的系统中，对象是一个封装了数据属性和操作行为的实体。使用某一对象时，只需知道其向外界提供的接口形式，无须知道其数据结构细节和实现操作的算法。也是为实现各种类型的知识拓展
对象的两个视图与封装 数据传送，将被传送的数据结构映射到另一种数据结构的处理方式。封装具有两层含义： 一是对象是其全部属性和服务紧密结合而形成的一个整体；二是对象如同一个密封的“黑盒子”，表示对象状态的数据和实现操作的代码都被封装在其中。
3. 类和实例的概念
类（Class）也称为对象类（Object Class）是对具有相同属性和服务的一组对象的抽象定义。类与对象是抽象描述与具体实例的关系，一个具体的对象被称为类的一个实例（Instance）。具有相同特征和行为的对象集合就是类。对象的状态包含在实例的属性中。【案例52】由“李凯的手机”等各种具体对象，可以得到“手机”类，而这些具体的对象就是该类的实例,如图51所示。
图51类与实例类定义了各个实例所共有的结构，类的每个实例都可使用类中定义的操作。实例的当前状态由实例所执行的操作定义。通常类可视为一个抽象数据类型(ADT)的实现，特别将类看作表示某种概念的一个模型。类实际是单个的语义单元，可以自然地管理系统中的对象，匹配数据定义及操作。类加入操作给记录赋予语义，可以提供各种级别的可访问性。 显示全部信息