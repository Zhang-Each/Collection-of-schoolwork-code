由浅入深、循序渐进地介绍Java高并发核心库的精髓，帮助读者掌握相关内容的技术细节。 内容讲解以真实问题为导向，层层递进，环环紧扣，详细阐述每一个解决方案的来龙去脉。 大量的实际案例，原理剖析和实战代码相结合，让读者能够更加清晰深入地理解每一个技术细节的用法和实用技巧。 详细介绍Java微基准测试工具集JMH与平台级性能指标数据度量工具Metrics的使用方法，帮助读者快速开发出高效、健壮的并发应用程序。 本书共包含四大部分。 第①部分 （第1章）详细介绍了JMH微基准测试工具的使用细节。该工具是由Oracle JVM开发团队相关成员开发的，开发者借助它能够了解自己编写的程序代码以及程序在运行期的精确性能表现。在本书的其他章节对API之间的性能进行对比时，主要也是依赖该工具，因此在学习本书的其他章节时，*好能够掌握该部分内容。强烈推荐开发者将JMH纳入自己日常的“兵器库”中，以便能够随时随地使用。 第②部分 （第2~5章）主要围绕Java并发包展开，内容包括：Java的原子类型及其底层原理（第2章）；Java的并发工具集（第3章），其中还穿插了Google Guava的部分内容；Java的并发容器（第4章），包括阻塞队列BlockingQueue和并发容器等内容；Java的ExecutorService（第5章），以及Future家族成员的详解。 第③部分 （第6章）主要介绍自Java 8 引入的Stream，并且重点解释了具备高并发能力的并行流原理，以及如何自定义并行流等相关内容。 第④部分（ 第7章）深入讲解了Metrics。作为一个比较小巧的度量工具集，Metrics目前已经成为事实上的度量标准，在很多开源软件、框架和平台中都能看到对它的使用，比如Apache的Kafka、Spark、Storm、Spring Cloud等都是使用Metrics作为系统运行性能指标收集的手段。