第 1章 预备知识 1 1.1　C 简介　1 1.2　C 简史　2 1.2.1　C语言　2 1.2.2　C语言编程原理　2 1.2.3　面向对象编程　3 1.2.4　C 和泛型编程　3 
第 1章 预备知识 1
1.1　C 简介　1
1.2　C 简史　2
1.2.1　C语言　2
1.2.2　C语言编程原理　2
1.2.3　面向对象编程　3
1.2.4　C 和泛型编程　3
1.2.5　C 的起源　4
1.3　可移植性和标准　5
1.3.1　C 的发展　5
1.3.2　本书遵循的C 标准　6
1.4　程序创建的技巧　6
1.4.1　创建源代码文件　6
1.4.2　编译和链接　7
1.5　总结　10
第　2章 开始学习C 　11
2.1　进入C 　11
2.1.1　main( )函数　12
2.1.2　C 注释　14
2.1.3　C 预处理器和iostream文件　14
2.1.4　头文件名　15
2.1.5　名称空间　15
2.1.6　使用cout进行C 输出　16
2.1.7　C 源代码的格式化　17
2.2　C 语句　18
2.2.1　声明语句和变量　19
2.2.2　赋值语句　20
2.2.3　cout的新花样　20
2.3　其他C 语句　21
2.3.1　使用cin　21
2.3.2　使用cout进行拼接　21
2.3.3　类简介　22
2.4　函数　23
2.4.1　使用有返回值的函数　23
2.4.2　函数变体　25
2.4.3　用户定义的函数　26
2.4.4　用户定义的有返回值的函数　28
2.4.5　在多函数程序中使用using编译指令　29
2.5　总结　30
2.6　复习题　30
2.7　编程练习　30
第3章　处理数据　32
3.1　简单变量　32
3.1.1　变量名　33
3.1.2　整型　34
3.1.3　整型short、int、long和long long　34
3.1.4　无符号类型　37
3.1.5　选择整型类型　38
3.1.6　整型字面值　39
3.1.7　C 如何确定常量的类型　40
3.1.8　char类型：字符和小整数　41
3.1.9　bool类型　46
3.2　const限定符　46
3.3　浮点数　47
3.3.1　书写浮点数　47
3.3.2　浮点类型　48
3.3.3　浮点常量　49
3.3.4　浮点数的优缺点　49
3.4　C 算术运算符　50
3.4.1　运算符优先级和结合性　51
3.4.2　除法分支　51
3.4.3　求模运算符　52
3.4.4　类型转换　53
3.4.5　C 11中的auto声明　56
3.5　总结　57
3.6　复习题　57
3.7　编程练习　58
第4章　复合类型　59
4.1　数组　59
4.1.1　程序说明　61
4.1.2　数组的初始化规则　61
4.1.3　C 11数组初始化方法　62
4.2　字符串　62
4.2.1　拼接字符串常量　63
4.2.2　在数组中使用字符串　63
4.2.3　字符串输入　64
4.2.4　每次读取一行字符串输入　65
4.2.5　混合输入字符串和数字　67
4.3　string类简介　68
4.3.1　C 11字符串初始化　69
4.3.2　赋值、拼接和附加　69
4.3.3　string类的其他操作　70
4.3.4　string类I/O　71
4.3.5　其他形式的字符串字面值　72
4.4　结构简介　73
4.4.1　在程序中使用结构　74
4.4.2　C 11结构初始化　75
4.4.3　结构可以将string类作为成员吗　75
4.4.4　其他结构属性　76
4.4.5　结构数组　77
4.4.6　结构中的位字段　78
4.5　共用体　78
4.6　枚举　79
4.6.1　设置枚举量的值　80
4.6.2　枚举的取值范围　80
4.7　指针和自由存储空间　80
4.7.1　声明和初始化指针　82
4.7.2　指针的危险　84
4.7.3　指针和数字　84
4.7.4　使用new来分配内存　84
4.7.5　使用delete释放内存　86
4.7.6　使用new来创建动态数组　86
4.8　指针、数组和指针算术　88
4.8.1　程序说明　89
4.8.2　指针小结　90
4.8.3　指针和字符串　92
4.8.4　使用new创建动态结构　94
4.8.5　自动存储、静态存储和动态存储　96
4.9　类型组合　97
4.10　数组的替代品　99
4.10.1　模板类vector　99
4.10.2　模板类array（C 11）　99
4.10.3　比较数组、vector对象和array对象　99
4.11　总结　101
4.12　复习题　101
4.13　编程练习　102
第5章　循环和关系表达式　104
5.1　for循环　104
5.1.1　for循环的组成部分　105
5.1.2　回到for循环　109
5.1.3　修改步长　110
5.1.4　使用for循环访问字符串　110
5.1.5　递增运算符（ ）和递减运算符（ ）　111
5.1.6　副作用和顺序点　112
5.1.7　前缀格式和后缀格式　112
5.1.8　递增/递减运算符和指针　112
5.1.9　组合赋值运算符　113
5.1.10　复合语句（语句块）　113
5.1.11　其他语法技巧——逗号运算符　115
5.1.12　关系表达式　116
5.1.13　赋值、比较和可能犯的错误　117
5.1.14　C-风格字符串的比较　118
5.1.15　比较string类字符串　120
5.2　while循环　120
5.2.1　for与while　121
5.2.2　等待一段时间：编写延时循环　123
5.3　do while循环　124
5.4　基于范围的for循环（C 11）　125
5.5　循环和文本输入　125
5.5.1　使用原始的cin进行输入　126
5.5.2　使用cin.get(char)进行补救　126
5.5.3　使用哪一个cin.get( )　127
5.5.4　文件尾条件　128
5.5.5　另一个cin.get( )版本　129
5.6　嵌套循环和二维数组　131
5.6.1　初始化二维数组　132
5.6.2　使用二维数组　133
5.7　总结　134
5.8　复习题　134
5.9　编程练习　135
第6章　分支语句和逻辑运算符　137
6.1　if语句　137
6.1.1　if else语句　138
6.1.2　格式化if else语句　139
6.1.3　if else if else结构　140
6.2　逻辑表达式　141
6.2.1　逻辑OR运算符：||　141
6.2.2　逻辑AND运算符：&&　142
6.2.3　用&&来设置取值范围　144
6.2.4　逻辑NOT运算符：!　145
6.2.5　逻辑运算符细节　146
6.2.6　其他表示方式　146
6.3　字符函数库cctype　147
6.4　:运算符　148
6.5　switch语句　149
6.5.1　将枚举量用作标签　151
6.5.2　switch和if else　152
6.6　break和continue语句　153
6.7　读取数字的循环　154
6.8　简单文件输入/输出　157
6.8.1　文本I/O和文本文件　157
6.8.2　写入到文本文件中　158
6.8.3　读取文本文件　160
6.9　总结　163
6.10　复习题　163
6.11　编程练习　165
第7章　函数——C 的编程模块　167
7.1　复习函数的基本知识　167
7.1.1　定义函数　168
7.1.2　函数原型和函数调用　169
7.2　函数参数和按值传递　171
7.2.1　多个参数　172
7.2.2　另一个接受两个参数的函数　174
7.3　函数和数组　175
7.3.1　函数如何使用指针来处理数组　176
7.3.2　将数组作为参数意味着什么　176
7.3.3　更多数组函数示例　178
7.3.4　使用数组区间的函数　181
7.3.5　指针和const　182
7.4　函数和二维数组　185
7.5　函数和C-风格字符串　186
7.5.1　将C-风格字符串作为参数的函数　186
7.5.2　返回C-风格字符串的函数　187
7.6　函数和结构　188
7.6.1　传递和返回结构　188
7.6.2　另一个处理结构的函数示例　189
7.6.3　传递结构的地址　192
7.7　函数和string对象　194
7.8　函数与array对象　195
7.9　递归　196
7.9.1　包含一个递归调用的递归　196
7.9.2　包含多个递归调用的递归　197
7.10　函数指针　198
7.10.1　函数指针的基础知识　199
7.10.2　函数指针示例　200
7.10.3　深入探讨函数指针　201
7.10.4　使用typedef进行简化　204
7.11　总结　204
7.12　复习题　205
7.13　编程练习　206
第8章　函数探幽　208
8.1　C 内联函数　208
8.2　引用变量　210
8.2.1　创建引用变量　210
8.2.2　将引用用作函数参数　212
8.2.3　引用的属性和特别之处　214
8.2.4　将引用用于结构　216
8.2.5　将引用用于类对象　220
8.2.6　对象、继承和引用　222
8.2.7　何时使用引用参数　224
8.3　默认参数　225
8.4　函数重载　227
8.4.1　重载示例　228
8.4.2　何时使用函数重载　230
8.5　函数模板　230
8.5.1　重载的模板　232
8.5.2　模板的局限性　233
8.5.3　显式具体化　234
8.5.4　实例化和具体化　236
8.5.5　编译器选择使用哪个函数版本　237
8.5.6　模板函数的发展　241
8.6　总结　243
8.7　复习题　243
8.8　编程练习　244
第9章　内存模型和名称空间　246
9.1　单独编译　246
9.2　存储持续性、作用域和链接性　250
9.2.1　作用域和链接　250
9.2.2　自动存储持续性　250
9.2.3　静态持续变量　253
9.2.4　静态持续性、外部链接性　254
9.2.5　静态持续性、内部链接性　257
9.2.6　静态存储持续性、无链接性　258
9.2.7　说明符和限定符　260
9.2.8　函数和链接性　261
9.2.9　语言链接性　262
9.2.10　存储方案和动态分配　262
9.3　名称空间　266
9.3.1　传统的C 名称空间　266
9.3.2　新的名称空间特性　267
9.3.3　名称空间示例　271
9.3.4　名称空间及其前途　274
9.4　总结　274
9.5　复习题　275
9.6　编程练习　276
第　10章 对象和类　278
10.1　过程性编程和面向对象编程　278
10.2　抽象和类　279
10.2.1　类型是什么　279
10.2.2　C 中的类　280
10.2.3　实现类成员函数　283
10.2.4　使用类　285
10.2.5　修改实现　286
10.2.6　小结　287
10.3　类的构造函数和析构函数　288
10.3.1　声明和定义构造函数　288
10.3.2　使用构造函数　289
10.3.3　默认构造函数　290
10.3.4　析构函数　290
10.3.5　改进Stock类　291
10.3.6　构造函数和析构函数小结　296
10.4　this指针　296
10.5　对象数组　300
10.6　类作用域　302
10.6.1　作用域为类的常量　302
10.6.2　作用域内枚举（C 11）　303
10.7　抽象数据类型　304
10.8　总结　307
10.9　复习题　307
10.10　编程练习　308
第　11章 使用类　310
11.1　运算符重载　310
11.2　计算时间：一个运算符重载示例　311
11.2.1　添加加法运算符　313
11.2.2　重载限制　315
11.2.3　其他重载运算符　316
11.3　友元　318
11.3.1　创建友元　319
11.3.2　常用的友元：重载
11.4　重载运算符：作为成员函数还是非成员函数　324
11.5　再谈重载：一个矢量类　324
11.5.1　使用状态成员　329
11.5.2　为Vector类重载算术运算符　331
11.5.3　对实现的说明　332
11.5.4　使用Vector类来模拟随机漫步　332
11.6　类的自动转换和强制类型转换　334
11.6.1　转换函数　338
11.6.2　转换函数和友元函数　341
11.7　总结　343
11.8　复习题　344
11.9　编程练习　344
第　12章 类和动态内存分配　346
12.1　动态内存和类　346
12.1.1　复习示例和静态类成员　346
12.1.2　特殊成员函数　352
12.1.3　回到Stringbad：复制构造函数的哪里出了问题　354
12.1.4　Stringbad的其他问题：赋值运算符　356
12.2　改进后的新String类　357
12.2.1　修订后的默认构造函数　357
12.2.2　比较成员函数　358
12.2.3　使用中括号表示法访问字符　359
12.2.4　静态类成员函数　360
12.2.5　进一步重载赋值运算符　360
12.3　在构造函数中使用new时应注意的事项　364
12.3.1　应该和不应该　365
12.3.2　包含类成员的类的逐成员复制　365
12.4　有关返回对象的说明　366
12.4.1　返回指向const对象的引用　366
12.4.2　返回指向非const对象的引用　366
12.4.3　返回对象　367
12.4.4　返回const对象　367
12.5　使用指向对象的指针　368
12.5.1　再谈new和delete　369
12.5.2　指针和对象小结　370
12.5.3　再谈定位new运算符　371
12.6　复习各种技术　374
12.6.1　重载
12.6.2　转换函数　375
12.6.3　其构造函数使用new的类　375
12.7　队列模拟　375
12.7.1　队列类　376
12.7.2　Customer类　382
12.7.3　ATM模拟　384
12.8　总结　387
12.9　复习题　388
12.10　编程练习　389
第　13章 类继承　392
13.1　一个简单的基类　393
13.1.1　派生一个类　394
13.1.2　构造函数：访问权限的考虑　395
13.1.3　使用派生类　397
13.1.4　派生类和基类之间的特殊关系　398
13.2　继承：is-a关系　400
13.3　多态公有继承　400
13.4　静态联编和动态联编　409
13.4.1　指针和引用类型的兼容性　409
13.4.2　虚成员函数和动态联编　411
13.4.3　有关虚函数注意事项　412
13.5　访问控制：protected　414
13.6　抽象基类　415
13.6.1　应用ABC概念　416
13.6.2　ABC理念　421
13.7　继承和动态内存分配　421
13.7.1　第 一种情况：派生类不使用new　421
13.7.2　第二种情况：派生类使用new　422
13.7.3　使用动态内存分配和友元的继承示例　423
13.8　类设计回顾　427
13.8.1　编译器生成的成员函数　427
13.8.2　其他的类方法　428
13.8.3　公有继承的考虑因素　429
13.8.4　类函数小结　432
13.9　总结　433
13.10　复习题　433
13.11　编程练习　434
第　14章 C 中的代码重用　436
14.1　包含对象成员的类　436
14.1.1　valarray类简介　437
14.1.2　Student类的设计　437
14.1.3　Student类示例　438
14.2　私有继承　443
14.2.1　Student类示例（新版本）　443
14.2.2　使用包含还是私有继承　447
14.2.3　保护继承　448
14.2.4　使用using重新定义访问权限　448
14.3　多重继承　449
14.3.1　有多少Worker　452
14.3.2　哪个方法　455
14.3.3　MI小结　461
14.4　类模板　462
14.4.1　定义类模板　462
14.4.2　使用模板类　464
14.4.3　深入探讨模板类　465
14.4.4　数组模板示例和非类型参数　469
14.4.5　模板多功能性　470
14.4.6　模板的具体化　473
14.4.7　成员模板　474
14.4.8　将模板用作参数　476
14.4.9　模板类和友元　477
14.4.10　模板别名（C 11）　482
14.5　总结　482
14.6　复习题　483
14.7　编程练习　484
第　15章 友元、异常和其他　488
15.1　友元　488
15.1.1　友元类　488
15.1.2　友元成员函数　492
15.1.3　其他友元关系　494
15.1.4　共同的友元　495
15.2　嵌套类　495
15.2.1　嵌套类和访问权限　496
15.2.2　模板中的嵌套　497
15.3　异常　499
15.3.1　调用abort()　500
15.3.2　返回错误码　500
15.3.3　异常机制　501
15.3.4　将对象用作异常类型　504
15.3.5　异常规范和C 11　506
15.3.6　栈解退　506
15.3.7　其他异常特性　510
15.3.8　exception类　511
15.3.9　异常、类和继承　514
15.3.10　异常何时会迷失方向　517
15.3.11　有关异常的注意事项　519
15.4　RTTI　520
15.4.1　RTTI的用途　520
15.4.2　RTTI的工作原理　521
15.5　类型转换运算符　526
15.6　总结　528
15.7　复习题　528
15.8　编程练习　529
第　16章 string类和标准模板库　530
16.1　string类　530
16.1.1　构造字符串　530
16.1.2　string类输入　533
16.1.3　使用字符串　535
16.1.4　string还提供了哪些功能　538
16.1.5　字符串种类　539
16.2　智能指针模板类　539
16.2.1　使用智能指针　540
16.2.2　有关智能指针的注意事项　542
16.2.3　unique_ptr为何优于auto_ptr　543
16.2.4　选择智能指针　545
16.3　标准模板库　545
16.3.1　模板类vector　546
16.3.2　可对矢量执行的操作　547
16.3.3　对矢量可执行的其他操作　550
16.3.4　基于范围的for循环（C 11）　553
16.4　泛型编程　553
16.4.1　为何使用迭代器　553
16.4.2　迭代器类型　556
16.4.3　迭代器层次结构　557
16.4.4　概念、改进和模型　558
16.4.5　容器种类　562
16.4.6　关联容器　568
16.4.7　无序关联容器（C 11）　572
16.5　函数对象　572
16.5.1　函数符概念　573
16.5.2　预定义的函数符　575
16.5.3　自适应函数符和函数适配器　576
16.6　算法　577
16.6.1　算法组　578
16.6.2　算法的通用特征　578
16.6.3　STL和string类　579
16.6.4　函数和容器方法　579
16.6.5　使用STL　581
16.7　其他库　583
16.7.1　vector、valarray和array　583
16.7.2　模板initializer_list（C 11）　586
16.7.3　使用initializer_list　587
16.8　总结　588
16.9　复习题　589
16.10　编程练习　590
第　17章 输入、输出和文件　592
17.1　C 输入和输出概述　592
17.1.1　流和缓冲区　593
17.1.2　流、缓冲区和iostream文件　594
17.1.3　重定向　596
17.2　使用cout进行输出　597
17.2.1　重载的
17.2.2　其他ostream方法　598
17.2.3　刷新输出缓冲区　600
17.2.4　用cout进行格式化　601
17.3　使用cin进行输入　611
17.3.1　cin>>如何检查输入　612
17.3.2　流状态　613
17.3.3　其他istream类方法　616
17.3.4　其他istream方法　620
17.4　文件输入和输出　622
17.4.1　简单的文件I/O　623
17.4.2　流状态检查和is_open()　625
17.4.3　打开多个文件　625
17.4.4　命令行处理技术　626
17.4.5　文件模式　627
17.4.6　随机存取　633
17.5　内核格式化　638
17.6　总结　640
17.7　复习题　641
17.8　编程练习　642
第　18章 探讨C 新标准　644
18.1　复习前面介绍过的C 11功能　644
18.1.1　新类型　644
18.1.2　统一的初始化　644
18.1.3　声明　645
18.1.4　智能指针　646
18.1.5　异常规范方面的修改　647
18.1.6　作用域内枚举　647
18.1.7　对类的修改　647
18.1.8　模板和STL方面的修改　648
18.1.9　右值引用　649
18.2　移动语义和右值引用　650
18.2.1　为何需要移动语义　650
18.2.2　一个移动示例　651
18.2.3　移动构造函数解析　654
18.2.4　赋值　655
18.2.5　强制移动　655
18.3　新的类功能　658
18.3.1　特殊的成员函数　658
18.3.2　默认的方法和禁用的方法　659
18.3.3　委托构造函数　660
18.3.4　继承构造函数　660
18.3.5　管理虚方法：override和final　661
18.4　Lambda函数　662
18.4.1　比较函数指针、函数符和Lambda函数　662
18.4.2　为何使用lambda　664
18.5　包装器　666
18.5.1　包装器function及模板的低效性　666
18.5.2　修复问题　667
18.5.3　其他方式　669
18.6　可变参数模板　669
18.6.1　模板和函数参数包　669
18.6.2　展开参数包　670
18.6.3　在可变参数模板函数中使用递归　670
18.7　C 11新增的其他功能　672
18.7.1　并行编程　672
18.7.2　新增的库　672
18.7.3　低级编程　673
18.7.4　杂项　673
18.8　语言变化　674
18.8.1　Boost项目　674
18.8.2　TR1　674
18.8.3　使用Boost　674
18.9　接下来的任务　675
18.10　总结　675
18.11　复习题　676
18.12　编程练习　678

 显示全部信息