第 1章　初识C语言 1 1.1　C语言的起源 1 1.2　选择C语言的理由 1 1.2.1　设计特性 1 1.2.2　高效性 1 1.2.3　可移植性 2 1.2.4　强大而灵活 2 
第 1章　初识C语言 1
1.1　C语言的起源 1
1.2　选择C语言的理由 1
1.2.1　设计特性 1
1.2.2　高效性 1
1.2.3　可移植性 2
1.2.4　强大而灵活 2
1.2.5　面向程序员 2
1.2.6　缺点 3
1.3　C语言的应用范围 3
1.4　计算机能做什么 4
1.5　高级计算机语言和编译器 4
1.6　语言标准 5
1.6.1　第 1个ANSI/ISO C标准 5
1.6.2　C99标准 6
1.6.3　C11标准 6
1.7　使用C语言的7个步骤 6
1.7.1　第 1步：定义程序的目标 7
1.7.2　第 2步：设计程序 7
1.7.3　第3步：编写代码 7
1.7.4　第4步：编译 8
1.7.5　第5步：运行程序 8
1.7.6　第6步：测试和调试程序 8
1.7.7　第7步：维护和修改代码 8
1.7.8　说明 9
1.8　编程机制 9
1.8.1　目标代码文件、可执行文件和库 9
1.8.2　UNIX系统 10
1.8.3　GNU编译器集合和LLVM项目 12
1.8.4　Linux系统 12
1.8.5　PC的命令行编译器 12
1.8.6　集成开发环境（Windows） 13
1.8.7　Windows/Linux 14
1.8.8　Macintosh中的C 14
1.9　本书的组织结构 14
1.10　本书的约定 15
1.10.1　字体 15
1.10.2　程序输出 15
1.10.3　特殊元素 16
1.11　本章小结 16
1.12　复习题 16
1.13　编程练习 16
第 2章　C语言概述 17
2.1　简单的C程序示例 17
2.2　示例解释 18
2.2.1　第 1遍：快速概要 18
2.2.2　第 2遍：程序细节 19
2.3　简单程序的结构 24
2.4　提高程序可读性的技巧 25
2.5　进一步使用C 26
2.5.1　程序说明 26
2.5.2　多条声明 27
2.5.3　乘法 27
2.5.4　打印多个值 27
2.6　多个函数 27
2.7　调试程序 28
2.7.1　语法错误 29
2.7.2　语义错误 29
2.7.3　程序状态 30
2.8　关键字和保留标识符 31
2.9　关键概念 31
2.10　本章小结 31
2.11　复习题 32
2.12　编程练习 33
第3章　数据和C 34
3.1　示例程序 34
3.1.1　程序中的新元素 35
3.2　变量与常量数据 36
3.3　数据：数据类型关键字 36
3.3.1　整数和浮点数 37
3.3.2　整数 37
3.3.3　浮点数 38
3.4　C语言基本数据类型 38
3.4.1　int类型 38
3.4.2　其他整数类型 41
3.4.3　使用字符：char类型 44
3.4.4　_Bool类型 48
3.4.5　可移植类型：stdint.h和
inttypes.h 48
3.4.6　float、double和
long double 49
3.4.7　复数和虚数类型 52
3.4.8　其他类型 53
3.4.9　类型大小 54
3.5　使用数据类型 55
3.6　参数和陷阱 55
3.7　转义序列示例 56
3.7.1　程序运行情况 57
3.7.2　刷新输出 57
3.8　关键概念 58
3.9　本章小结 58
3.10　复习题 58
3.11　编程练习 60
第4章　字符串和格式化输入/输出 61
4.1　前导程序 61
4.2　字符串简介 62
4.2.1　char类型数组和null字符 62
4.2.2　使用字符串 63
4.2.3　strlen()函数 63
4.3　常量和C预处理器 65
4.3.1　const限定符 67
4.3.2　明示常量 67
4.4　printf()和scanf() 69
4.4.1　printf()函数 69
4.4.2　使用printf() 70
4.4.3　printf()的转换说明修饰符 71
4.4.4　转换说明的意义 75
4.4.5　使用scanf() 79
4.4.6　printf()和scanf()的* 
修饰符 82
4.4.7　printf()的用法提示 83
4.5　关键概念 84
4.6　本章小结 85
4.7　复习题 85
4.8　编程练习 87
第5章　运算符、表达式和语句 88
5.1　循环简介 88
5.2　基本运算符 90
5.2.1　赋值运算符：= 90
5.2.2　加法运算符： 91
5.2.3　减法运算符：- 92
5.2.4　符号运算符：-和 92
5.2.5　乘法运算符：* 92
5.2.6　除法运算符：/ 93
5.2.7　运算符优先级 94
5.2.8　优先级和求值顺序 95
5.3　其他运算符 96
5.3.1　sizeof运算符和size_t类型 96
5.3.2　求模运算符：% 97
5.3.3　递增运算符： 98
5.3.4　递减运算符：-- 100
5.3.5　优先级 101
5.3.6　不要自作聪明 101
5.4　表达式和语句 102
5.4.1　表达式 102
5.4.2　语句 103
5.4.3　复合语句（块） 105
5.5　类型转换 106
5.6　带参数的函数 109
5.7　示例程序 110
5.8　关键概念 111
5.9　本章小结 112
5.10　复习题 112
5.11　编程练习 114
第6章　C控制语句：循环 116
6.1　再探while循环 116
6.1.1　程序注释 117
6.1.2　C风格读取循环 118
6.2　while语句 118
6.2.1　终止while循环 119
6.2.2　何时终止循环 119
6.2.3　while：入口条件循环 120
6.2.4　语法要点 120
6.3　用关系运算符和表达式比较大小 121
6.3.1　什么是真 122
6.3.2　其他真值 123
6.3.3　真值的问题 124
6.3.4　新的_Bool类型 125
6.3.5　优先级和关系运算符 126
6.4　不确定循环和计数循环 127
6.5　for循环 128
6.6　其他赋值运算符： =、-=、*=、
/=、%= 132
6.7　逗号运算符 133
6.8　出口条件循环：do　while 136
6.9　如何选择循环 138
6.10　嵌套循环 138
6.10.1　程序分析 139
6.10.2　嵌套变式 139
6.11　数组简介 140
6.12　使用函数返回值的循环示例 142
6.12.1　程序分析 144
6.12.2　使用带返回值的函数 144
6.13　关键概念 145
6.14　本章小结 145
6.15　复习题 146
6.16　编程练习 149
第7章　C控制语句：分支和跳转 151
7.1　if语句 151
7.2　if else语句 152
7.2.1　另一个示例：介绍getchar()和putchar() 153
7.2.2　ctype.h系列的字符函数 155
7.2.3　多重选择else　if 156
7.2.4　else与if配对 158
7.2.5　多层嵌套的if语句 159
7.3　逻辑运算符 162
7.3.1　备选拼写：iso646.h头文件 163
7.3.2　优先级 164
7.3.3　求值顺序 164
7.3.4　范围 165
7.4　一个统计单词的程序 165
7.5　条件运算符： : 168
7.6　循环辅助：continue和break 169
7.6.1　continue语句 169
7.6.2　break语句 171
7.7　多重选择：switch和break 173
7.7.1　switch语句 174
7.7.2　只读每行的首字符 176
7.7.3　多重标签 176
7.7.4　switch和if　else 178
7.8　goto语句 178
7.9　关键概念 181
7.10　本章小结 181
7.11　复习题 181
7.12　编程练习 184
第8章　字符输入/输出和输入验证 186
8.1　单字符I/O：getchar()和
putchar() 186
8.2　缓冲区 187
8.3　结束键盘输入 188
8.3.1　文件、流和键盘输入 188
8.3.2　文件结尾 189
8.4　重定向和文件 191
8.5　创建更友好的用户界面 194
8.5.1　使用缓冲输入 194
8.5.2　混合数值和字符输入 196
8.6　输入验证 198
8.6.1　分析程序 201
8.6.2　输入流和数字 201
8.7　菜单浏览 202
8.7.1　任务 202
8.7.2　使执行更顺利 202
8.7.3　混合字符和数值输入 204
8.8　关键概念 206
8.9　本章小结 206
8.10　复习题 207
8.11　编程练习 208
第9章　函数 209
9.1　复习函数 209
9.1.1　创建并使用简单函数 210
9.1.2　分析程序 210
9.1.3　函数参数 212
9.1.4　定义带形式参数的函数 213
9.1.5　声明带形式参数函数的原型 214
9.1.6　调用带实际参数的函数 214
9.1.7　黑盒视角 215
9.1.8　使用return从函数中返回值 215
9.1.9　函数类型 217
9.2　ANSI C函数原型 218
9.2.1　问题所在 218
9.2.2　ANSI的解决方案 219
9.2.3　无参数和未指定参数 220
9.2.4　函数原型的优点 220
9.3　递归 220
9.3.1　演示递归 220
9.3.2　递归的基本原理 221
9.3.3　尾递归 222
9.3.4　递归和倒序计算 224
9.3.5　递归的优缺点 225
9.4　编译多源代码文件的程序 226
9.4.1　UNIX 226
9.4.2　Linux 226
9.4.3　DOS命令行编译器 226
9.4.4　Windows和苹果的IDE编译器 226
9.4.5　使用头文件 226
9.5　查找地址：&运算符 229
9.6　更改主调函数中的变量 230
9.7　指针简介 231
9.7.1　间接运算符：* 232
9.7.2　声明指针 232
9.7.3　使用指针在函数间通信 233
9.8　关键概念 236
9.9　本章小结 236
9.10　复习题 236
9.11　编程练习 237
第 10章　数组和指针 238
10.1　数组 238
10.1.1　初始化数组 238
10.1.2　指定初始化器（C99） 241
10.1.3　给数组元素赋值 242
10.1.4　数组边界 243
10.1.5　指定数组的大小 244
10.2　多维数组 244
10.2.1　初始化二维数组 247
10.2.2　其他多维数组 247
10.3　指针和数组 248
10.4　函数、数组和指针 250
10.4.1　使用指针形参 251
10.4.2　指针表示法和数组表示法 253
10.5　指针操作 253
10.6　保护数组中的数据 256
10.6.1　对形式参数使用const 257
10.6.2　const的其他内容 258
10.7　指针和多维数组 259
10.7.1　指向多维数组的指针 261
10.7.2　指针的兼容性 262
10.7.3　函数和多维数组 263
10.8　变长数组（VLA） 266
10.9　复合字面量 269
10.10　关键概念 270
10.11　本章小结 271
10.12　复习题 271
10.13　编程练习 273
第 11章　字符串和字符串函数 275
11.1　表示字符串和字符串I/O 275
11.1.1　在程序中定义字符串 276
11.1.2　指针和字符串 281
11.2　字符串输入 282
11.2.1　分配空间 282
11.2.2　不幸的gets()函数 282
11.2.3　gets()的替代品 283
11.2.4　scanf()函数 288
11.3　字符串输出 289
11.3.1　puts()函数 289
11.3.2　fputs()函数 290
11.3.3　printf()函数 291
11.4　自定义输入/输出函数 291
11.5　字符串函数 293
11.5.1　strlen()函数 293
11.5.2　strcat()函数 294
11.5.3　strncat()函数 295
11.5.4　strcmp()函数 296
11.5.5　strcpy()和strncpy()函数 301
11.5.6　sprintf()函数 305
11.5.7　其他字符串函数 306
11.6　字符串示例：字符串排序 307
11.6.1　排序指针而非字符串 308
11.6.2　选择排序算法 309
11.7　ctype.h字符函数和字符串 310
11.8　命令行参数 311
11.8.1　集成环境中的命令行参数 312
11.8.2　Macintosh中的命令行参数 312
11.9　把字符串转换为数字 313
11.10　关键概念 315
11.11　本章小结 315
11.12　复习题 316
11.13　编程练习 318
第 12章　存储类别、链接和内存管理 320
12.1　存储类别 320
12.1.1　作用域 321
12.1.2　链接 322
12.1.3　存储期 323
12.1.4　自动变量 324
12.1.5　寄存器变量 326
12.1.6　块作用域的静态变量 327
12.1.7　外部链接的静态变量 328
12.1.8　内部链接的静态变量 331
12.1.9　多文件 331
12.1.10　存储类别说明符 332
12.1.11　存储类别和函数 334
12.1.12　存储类别的选择 334
12.2　随机数函数和静态变量 334
12.3　掷骰子 337
12.4　分配内存：malloc()和free() 340
12.4.1　free()的重要性 343
12.4.2　calloc()函数 343
12.4.3　动态内存分配和变长数组 344
12.4.4　存储类别和动态内存分配 344
12.5　ANSI C类型限定符 346
12.5.1　const类型限定符 346
12.5.2　volatile类型限定符 347
12.5.3　restrict类型限定符 348
12.5.4　_Atomic类型限定符（C11） 349
12.5.5　旧关键字的新位置 349
12.6　关键概念 349
12.7　本章小结 350
12.8　复习题 350
12.9　编程练习 352
第 13章　文件输入/输出 354
13.1　与文件进行通信 354
13.1.1　文件是什么 354
13.1.2　文本模式和二进制模式 354
13.1.3　I/O的级别 355
13.1.4　标准文件 356
13.2　标准I/O 356
13.2.1　检查命令行参数 357
13.2.2　fopen()函数 357
13.2.3　getc()和putc()函数 358
13.2.4　文件结尾 358
13.2.5　fclose()函数 359
13.2.6　指向标准文件的指针 359
13.3　一个简单的文件压缩程序 360
13.4　文件I/O：fprintf()、fscanf()、
fgets()和fputs() 361
13.4.1　fprintf()和fscanf()
函数 361
13.4.2　fgets()和fputs()函数 362
13.5　随机访问：fseek()和ftell() 363
13.5.1　fseek()和ftell()的工作
原理 364
13.5.2　二进制模式和文本模式 365
13.5.3　可移植性 365
13.5.4　fgetpos()和fsetpos()
函数 365
13.6　标准I/O的机理 366
13.7　其他标准I/O函数 366
13.7.1　int ungetc(int c, FILE *fp)
函数 367
13.7.2　int fflush()函数 367
13.7.3　int setvbuf()函数 367
13.7.4　二进制I/O：fread()
和fwrite() 367
13.7.5　size_t fwrite()函数 368
13.7.6　size_t fread()函数 369
13.7.7　int feof(FILE *fp)和
int ferror(FILE *fp)
函数 369
13.7.8　一个程序示例 369
13.7.9　用二进制I/O进行随机访问 372
13.8　关键概念 373
13.9　本章小结 373
13.10　复习题 374
13.11　编程练习 375
第 14章　结构和其他数据形式 377
14.1　示例问题：创建图书目录 377
14.2　建立结构声明 378
14.3　定义结构变量 379
14.3.1　初始化结构 380
14.3.2　访问结构成员 380
14.3.3　结构的初始化器 381
14.4　结构数组 381
14.4.1　声明结构数组 383
14.4.2　标识结构数组的成员 383
14.4.3　程序讨论 384
14.5　嵌套结构 384
14.6　指向结构的指针 386
14.6.1　声明和初始化结构指针 387
14.6.2　用指针访问成员 387
14.7　向函数传递结构的信息 387
14.7.1　传递结构成员 388
14.7.2　传递结构的地址 388
14.7.3　传递结构 389
14.7.4　其他结构特性 390
14.7.5　结构和结构指针的选择 393
14.7.6　结构中的字符数组和字符指针 394
14.7.7　结构、指针和malloc() 394
14.7.8　复合字面量和结构（C99） 397
14.7.9　伸缩型数组成员（C99） 398
14.7.10　匿名结构（C11） 400
14.7.11　使用结构数组的函数 400
14.8　把结构内容保存到文件中 401
14.8.1　保存结构的程序示例 402
14.8.2　程序要点 404
14.9　链式结构 405
14.10　联合简介 405
14.10.1　使用联合 406
14.10.2　匿名联合（C11） 407
14.11　枚举类型 408
14.11.1　enum常量 408
14.11.2　默认值 408
14.11.3　赋值 409
14.11.4　enum的用法 409
14.11.5　共享名称空间 410
14.12　typedef简介 411
14.13　其他复杂的声明 412
14.14　函数和指针 413
14.15　关键概念 418
14.16　本章小结 418
14.17　复习题 419
14.18　编程练习 421
第 15章　位操作 423
15.1　二进制数、位和字节 423
15.1.1　二进制整数 423
15.1.2　有符号整数 424
15.1.3　二进制浮点数 424
15.2　其他进制数 425
15.2.1　八进制 425
15.2.2　十六进制 425
15.3　C按位运算符 426
15.3.1　按位逻辑运算符 426
15.3.2　用法：掩码 427
15.3.3　用法：打开位（设置位） 428
15.3.4　用法：关闭位（清空位） 428
15.3.5　用法：切换位 428
15.3.6　用法：检查位的值 429
15.3.7　移位运算符 429
15.3.8　编程示例 430
15.3.9　另一个例子 432
15.4　位字段 433
15.4.1　位字段示例 434
15.4.2　位字段和按位运算符 437
15.5　对齐特性（C11） 442
15.6　关键概念 443
15.7　本章小结 443
15.8　复习题 444
15.9　编程练习 445
第 16章　C预处理器和C库 447
16.1　翻译程序的第 一步 447
16.2　明示常量：#define 448
16.2.1　记号 450
16.2.2　重定义常量 450
16.3　在#define中使用参数 451
16.3.1　用宏参数创建字符串：#
运算符 452
16.3.2　预处理器黏合剂：##运算符 453
16.3.3　变参宏：...和_ _VA_ARGS_ _ 454
16.4　宏和函数的选择 454
16.5　文件包含：#include 455
16.5.1　头文件示例 456
16.5.2　使用头文件 457
16.6　其他指令 458
16.6.1　#undef指令 458
16.6.2　从C预处理器角度看已定义 458
16.6.3　条件编译 459
16.6.4　预定义宏 462
16.6.5　#line和#error 463
16.6.6　#pragma 463
16.6.7　泛型选择（C11） 464
16.7　内联函数（C99） 465
16.8　_Noreturn函数（C11） 467
16.9　C库 467
16.9.1　访问C库 467
16.9.2　使用库描述 468
16.10　数学库 469
16.10.1　三角问题 469
16.10.2　类型变体 471
16.10.3　tgmath.h库（C99） 472
16.11　通用工具库 472
16.11.1　exit()和atexit()函数 472
16.11.2　qsort()函数 474
16.12　断言库 477
16.12.1　assert的用法 477
16.12.2　_Static_assert（C11） 478
16.13　string.h库中的memcpy()和
memmove() 479
16.14　可变参数：stdarg.h 481
16.15　关键概念 482
16.16　本章小结 483
16.17　复习题 483
16.18　编程练习 484
第 17章　高级数据表示 486
17.1　研究数据表示 486
17.2　从数组到链表 488
17.2.1　使用链表 491
17.2.2　反思 493
17.3　抽象数据类型（ADT） 494
17.3.1　建立抽象 494
17.3.2　建立接口 495
17.3.3　使用接口 498
17.3.4　实现接口 500
17.4　队列ADT 505
17.4.1　定义队列抽象数据类型 505
17.4.2　定义一个接口 505
17.4.3　实现接口数据表示 506
17.4.4　测试队列 512
17.5　用队列进行模拟 514
17.6　链表和数组 518
17.7　二叉查找树 521
17.7.1　二叉树ADT 522
17.7.2　二叉查找树接口 522
17.7.3　二叉树的实现 524
17.7.4　使用二叉树 535
17.7.5　树的思想 538
17.8　其他说明 539
17.9　关键概念 540
17.10　本章小结 540
17.11　复习题 540
17.12　编程练习 541
 显示全部信息